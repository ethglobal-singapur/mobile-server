/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Passport, PassportInterface } from "../Passport";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "date",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isVisit",
            type: "bool",
          },
        ],
        internalType: "struct Passport.Country",
        name: "visited_country",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_document_number",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_surname",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "string",
        name: "_birthdate",
        type: "string",
      },
      {
        internalType: "string",
        name: "_date",
        type: "string",
      },
    ],
    name: "addCountryToPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_document_number",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_surname",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "string",
        name: "_birthdate",
        type: "string",
      },
      {
        internalType: "string",
        name: "_date",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "date",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isVisit",
            type: "bool",
          },
        ],
        internalType: "struct Passport.Country[]",
        name: "_countries",
        type: "tuple[]",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPeople",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "document_number",
            type: "string",
          },
          {
            internalType: "string",
            name: "surname",
            type: "string",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "string",
            name: "birthdate",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "date",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isVisit",
                type: "bool",
              },
            ],
            internalType: "struct Passport.Country[]",
            name: "countries",
            type: "tuple[]",
          },
        ],
        internalType: "struct Passport.Person[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_document_number",
        type: "string",
      },
    ],
    name: "getPerson",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_document_number",
        type: "string",
      },
    ],
    name: "isPersonExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "persons",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "document_number",
        type: "string",
      },
      {
        internalType: "string",
        name: "surname",
        type: "string",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "string",
        name: "birthdate",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "persons_map",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "document_number",
        type: "string",
      },
      {
        internalType: "string",
        name: "surname",
        type: "string",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "string",
        name: "birthdate",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllPeople",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506128748061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2f9eac61161005b578063a2f9eac614610105578063c4d9e7fa14610139578063ca233e1814610169578063e907247c1461018557610088565b80633da20e261461008d578063445335a414610097578063543e04a9146100cb57806385a26d7d146100e7575b600080fd5b6100956101b5565b005b6100b160048036038101906100ac91906117d2565b6101c4565b6040516100c295949392919061189a565b60405180910390f35b6100e560048036038101906100e091906119ee565b6104b8565b005b6100ef610931565b6040516100fc9190611e34565b60405180910390f35b61011f600480360381019061011a9190611e8c565b610e08565b60405161013095949392919061189a565b60405180910390f35b610153600480360381019061014e91906117d2565b6110f6565b6040516101609190611ec8565b60405180910390f35b610183600480360381019061017e9190611fc9565b61112f565b005b61019f600480360381019061019a91906117d2565b61138c565b6040516101ac919061212f565b60405180910390f35b6000806101c2919061143f565b565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546101fd90612180565b80601f016020809104026020016040519081016040528092919081815260200182805461022990612180565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b50505050509080600101805461028b90612180565b80601f01602080910402602001604051908101604052809291908181526020018280546102b790612180565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b50505050509080600201805461031990612180565b80601f016020809104026020016040519081016040528092919081815260200182805461034590612180565b80156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b5050505050908060030180546103a790612180565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390612180565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b50505050509080600401805461043590612180565b80601f016020809104026020016040519081016040528092919081815260200182805461046190612180565b80156104ae5780601f10610483576101008083540402835291602001916104ae565b820191906000526020600020905b81548152906001019060200180831161049157829003601f168201915b5050505050905085565b6104c1866110f6565b610591573073ffffffffffffffffffffffffffffffffffffffff1663ca233e18878787878787600067ffffffffffffffff811115610502576105016116a7565b5b60405190808252806020026020018201604052801561053b57816020015b610528611463565b8152602001906001900390816105205790505b506040518863ffffffff1660e01b815260040161055e9796959493929190612237565b600060405180830381600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b505050505b60006001876040516105a39190612313565b908152602001604051809103902090508060050188908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816105f691906124d6565b50602082015181600101908161060c91906124d6565b5060408201518160020160006101000a81548160ff021916908315150217905550505060005b600160008054905061064491906125d7565b8110156107d6578760405160200161065c9190612313565b60405160208183030381529060405280519060200120600082815481106106865761068561260b565b5b90600052602060002090600602016001016040516020016106a791906126bd565b60405160208183030381529060405280519060200120036107c957600081815481106106d6576106d561260b565b5b9060005260206000209060060201600080820160006106f59190611486565b6001820160006107059190611486565b6002820160006107159190611486565b6003820160006107259190611486565b6004820160006107359190611486565b60058201600061074591906114c6565b50506001886040516107579190612313565b9081526020016040518091039020600080820160006107769190611486565b6001820160006107869190611486565b6002820160006107969190611486565b6003820160006107a69190611486565b6004820160006107b69190611486565b6005820160006107c691906114c6565b50505b8080600101915050610632565b50806001886040516107e89190612313565b90815260200160405180910390206000820181600001908161080a91906126ea565b506001820181600101908161081f91906126ea565b506002820181600201908161083491906126ea565b506003820181600301908161084991906126ea565b506004820181600401908161085e91906126ea565b5060058201816005019080546108759291906114ea565b509050506000819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082018160000190816108b991906126ea565b50600182018160010190816108ce91906126ea565b50600282018160020190816108e391906126ea565b50600382018160030190816108f891906126ea565b506004820181600401908161090d91906126ea565b5060058201816005019080546109249291906114ea565b5050505050505050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610dff57838290600052602060002090600602016040518060c001604052908160008201805461098890612180565b80601f01602080910402602001604051908101604052809291908181526020018280546109b490612180565b8015610a015780601f106109d657610100808354040283529160200191610a01565b820191906000526020600020905b8154815290600101906020018083116109e457829003601f168201915b50505050508152602001600182018054610a1a90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4690612180565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b50505050508152602001600282018054610aac90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad890612180565b8015610b255780601f10610afa57610100808354040283529160200191610b25565b820191906000526020600020905b815481529060010190602001808311610b0857829003601f168201915b50505050508152602001600382018054610b3e90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90612180565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b50505050508152602001600482018054610bd090612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfc90612180565b8015610c495780601f10610c1e57610100808354040283529160200191610c49565b820191906000526020600020905b815481529060010190602001808311610c2c57829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610de85783829060005260206000209060030201604051806060016040529081600082018054610caa90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690612180565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b50505050508152602001600182018054610d3c90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6890612180565b8015610db55780601f10610d8a57610100808354040283529160200191610db5565b820191906000526020600020905b815481529060010190602001808311610d9857829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610c77565b505050508152505081526020019060010190610955565b50505050905090565b60008181548110610e1857600080fd5b9060005260206000209060060201600091509050806000018054610e3b90612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6790612180565b8015610eb45780601f10610e8957610100808354040283529160200191610eb4565b820191906000526020600020905b815481529060010190602001808311610e9757829003601f168201915b505050505090806001018054610ec990612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef590612180565b8015610f425780601f10610f1757610100808354040283529160200191610f42565b820191906000526020600020905b815481529060010190602001808311610f2557829003601f168201915b505050505090806002018054610f5790612180565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8390612180565b8015610fd05780601f10610fa557610100808354040283529160200191610fd0565b820191906000526020600020905b815481529060010190602001808311610fb357829003601f168201915b505050505090806003018054610fe590612180565b80601f016020809104026020016040519081016040528092919081815260200182805461101190612180565b801561105e5780601f106110335761010080835404028352916020019161105e565b820191906000526020600020905b81548152906001019060200180831161104157829003601f168201915b50505050509080600401805461107390612180565b80601f016020809104026020016040519081016040528092919081815260200182805461109f90612180565b80156110ec5780601f106110c1576101008083540402835291602001916110ec565b820191906000526020600020905b8154815290600101906020018083116110cf57829003601f168201915b5050505050905085565b6000806001836040516111099190612313565b9081526020016040518091039020600001805461112590612180565b9050119050919050565b611138876110f6565b15611178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116f9061281e565b60405180910390fd5b600060018860405161118a9190612313565b90815260200160405180910390209050868160000190816111ab91906124d6565b50858160020190816111bd91906124d6565b50878160010190816111cf91906124d6565b50848160030190816111e191906124d6565b50838160040190816111f391906124d6565b5060018251036112d457806005016040518060600160405280846000815181106112205761121f61260b565b5b60200260200101516000015181526020018581526020018460008151811061124b5761124a61260b565b5b60200260200101516040015115158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908161129a91906124d6565b5060208201518160010190816112b091906124d6565b5060408201518160020160006101000a81548160ff02191690831515021790555050505b60008190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820181600001908161131491906126ea565b506001820181600101908161132991906126ea565b506002820181600201908161133e91906126ea565b506003820181600301908161135391906126ea565b506004820181600401908161136891906126ea565b50600582018160050190805461137f9291906114ea565b5050505050505050505050565b606060018260405161139e9190612313565b908152602001604051809103902060000180546113ba90612180565b80601f01602080910402602001604051908101604052809291908181526020018280546113e690612180565b80156114335780601f1061140857610100808354040283529160200191611433565b820191906000526020600020905b81548152906001019060200180831161141657829003601f168201915b50505050509050919050565b50805460008255600602906000526020600020908101906114609190611599565b50565b604051806060016040528060608152602001606081526020016000151581525090565b50805461149290612180565b6000825580601f106114a457506114c3565b601f0160209004906000526020600020908101906114c29190611610565b5b50565b50805460008255600302906000526020600020908101906114e7919061162d565b50565b8280548282559060005260206000209060030281019282156115885760005260206000209160030282015b828111156115875782826000820181600001908161153391906126ea565b506001820181600101908161154891906126ea565b506002820160009054906101000a900460ff168160020160006101000a81548160ff021916908315150217905550505091600301919060030190611515565b5b509050611595919061162d565b5090565b5b8082111561160c57600080820160006115b39190611486565b6001820160006115c39190611486565b6002820160006115d39190611486565b6003820160006115e39190611486565b6004820160006115f39190611486565b60058201600061160391906114c6565b5060060161159a565b5090565b5b80821115611629576000816000905550600101611611565b5090565b5b8082111561167457600080820160006116479190611486565b6001820160006116579190611486565b6002820160006101000a81549060ff02191690555060030161162e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116df82611696565b810181811067ffffffffffffffff821117156116fe576116fd6116a7565b5b80604052505050565b6000611711611678565b905061171d82826116d6565b919050565b600067ffffffffffffffff82111561173d5761173c6116a7565b5b61174682611696565b9050602081019050919050565b82818337600083830152505050565b600061177561177084611722565b611707565b90508281526020810184848401111561179157611790611691565b5b61179c848285611753565b509392505050565b600082601f8301126117b9576117b861168c565b5b81356117c9848260208601611762565b91505092915050565b6000602082840312156117e8576117e7611682565b5b600082013567ffffffffffffffff81111561180657611805611687565b5b611812848285016117a4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561185557808201518184015260208101905061183a565b60008484015250505050565b600061186c8261181b565b6118768185611826565b9350611886818560208601611837565b61188f81611696565b840191505092915050565b600060a08201905081810360008301526118b48188611861565b905081810360208301526118c88187611861565b905081810360408301526118dc8186611861565b905081810360608301526118f08185611861565b905081810360808301526119048184611861565b90509695505050505050565b600080fd5b600080fd5b60008115159050919050565b61192f8161191a565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60006060828403121561196857611967611910565b5b6119726060611707565b9050600082013567ffffffffffffffff81111561199257611991611915565b5b61199e848285016117a4565b600083015250602082013567ffffffffffffffff8111156119c2576119c1611915565b5b6119ce848285016117a4565b60208301525060406119e28482850161193d565b60408301525092915050565b600080600080600080600060e0888a031215611a0d57611a0c611682565b5b600088013567ffffffffffffffff811115611a2b57611a2a611687565b5b611a378a828b01611952565b975050602088013567ffffffffffffffff811115611a5857611a57611687565b5b611a648a828b016117a4565b965050604088013567ffffffffffffffff811115611a8557611a84611687565b5b611a918a828b016117a4565b955050606088013567ffffffffffffffff811115611ab257611ab1611687565b5b611abe8a828b016117a4565b945050608088013567ffffffffffffffff811115611adf57611ade611687565b5b611aeb8a828b016117a4565b93505060a088013567ffffffffffffffff811115611b0c57611b0b611687565b5b611b188a828b016117a4565b92505060c088013567ffffffffffffffff811115611b3957611b38611687565b5b611b458a828b016117a4565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611b9c8261181b565b611ba68185611b80565b9350611bb6818560208601611837565b611bbf81611696565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611bff8161191a565b82525050565b60006060830160008301518482036000860152611c228282611b91565b91505060208301518482036020860152611c3c8282611b91565b9150506040830151611c516040860182611bf6565b508091505092915050565b6000611c688383611c05565b905092915050565b6000602082019050919050565b6000611c8882611bca565b611c928185611bd5565b935083602082028501611ca485611be6565b8060005b85811015611ce05784840389528151611cc18582611c5c565b9450611ccc83611c70565b925060208a01995050600181019050611ca8565b50829750879550505050505092915050565b600060c0830160008301518482036000860152611d0f8282611b91565b91505060208301518482036020860152611d298282611b91565b91505060408301518482036040860152611d438282611b91565b91505060608301518482036060860152611d5d8282611b91565b91505060808301518482036080860152611d778282611b91565b91505060a083015184820360a0860152611d918282611c7d565b9150508091505092915050565b6000611daa8383611cf2565b905092915050565b6000602082019050919050565b6000611dca82611b54565b611dd48185611b5f565b935083602082028501611de685611b70565b8060005b85811015611e225784840389528151611e038582611d9e565b9450611e0e83611db2565b925060208a01995050600181019050611dea565b50829750879550505050505092915050565b60006020820190508181036000830152611e4e8184611dbf565b905092915050565b6000819050919050565b611e6981611e56565b8114611e7457600080fd5b50565b600081359050611e8681611e60565b92915050565b600060208284031215611ea257611ea1611682565b5b6000611eb084828501611e77565b91505092915050565b611ec28161191a565b82525050565b6000602082019050611edd6000830184611eb9565b92915050565b600067ffffffffffffffff821115611efe57611efd6116a7565b5b602082029050602081019050919050565b600080fd5b6000611f27611f2284611ee3565b611707565b90508083825260208201905060208402830185811115611f4a57611f49611f0f565b5b835b81811015611f9157803567ffffffffffffffff811115611f6f57611f6e61168c565b5b808601611f7c8982611952565b85526020850194505050602081019050611f4c565b5050509392505050565b600082601f830112611fb057611faf61168c565b5b8135611fc0848260208601611f14565b91505092915050565b600080600080600080600060e0888a031215611fe857611fe7611682565b5b600088013567ffffffffffffffff81111561200657612005611687565b5b6120128a828b016117a4565b975050602088013567ffffffffffffffff81111561203357612032611687565b5b61203f8a828b016117a4565b965050604088013567ffffffffffffffff8111156120605761205f611687565b5b61206c8a828b016117a4565b955050606088013567ffffffffffffffff81111561208d5761208c611687565b5b6120998a828b016117a4565b945050608088013567ffffffffffffffff8111156120ba576120b9611687565b5b6120c68a828b016117a4565b93505060a088013567ffffffffffffffff8111156120e7576120e6611687565b5b6120f38a828b016117a4565b92505060c088013567ffffffffffffffff81111561211457612113611687565b5b6121208a828b01611f9b565b91505092959891949750929550565b600060208201905081810360008301526121498184611861565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061219857607f821691505b6020821081036121ab576121aa612151565b5b50919050565b600082825260208201905092915050565b60006121cd82611bca565b6121d781856121b1565b9350836020820285016121e985611be6565b8060005b8581101561222557848403895281516122068582611c5c565b945061221183611c70565b925060208a019950506001810190506121ed565b50829750879550505050505092915050565b600060e0820190508181036000830152612251818a611861565b905081810360208301526122658189611861565b905081810360408301526122798188611861565b9050818103606083015261228d8187611861565b905081810360808301526122a18186611861565b905081810360a08301526122b58185611861565b905081810360c08301526122c981846121c2565b905098975050505050505050565b600081905092915050565b60006122ed8261181b565b6122f781856122d7565b9350612307818560208601611837565b80840191505092915050565b600061231f82846122e2565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261238c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261234f565b612396868361234f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006123d36123ce6123c984611e56565b6123ae565b611e56565b9050919050565b6000819050919050565b6123ed836123b8565b6124016123f9826123da565b84845461235c565b825550505050565b600090565b612416612409565b6124218184846123e4565b505050565b5b818110156124455761243a60008261240e565b600181019050612427565b5050565b601f82111561248a5761245b8161232a565b6124648461233f565b81016020851015612473578190505b61248761247f8561233f565b830182612426565b50505b505050565b600082821c905092915050565b60006124ad6000198460080261248f565b1980831691505092915050565b60006124c6838361249c565b9150826002028217905092915050565b6124df8261181b565b67ffffffffffffffff8111156124f8576124f76116a7565b5b6125028254612180565b61250d828285612449565b600060209050601f831160018114612540576000841561252e578287015190505b61253885826124ba565b8655506125a0565b601f19841661254e8661232a565b60005b8281101561257657848901518255600182019150602085019450602081019050612551565b86831015612593578489015161258f601f89168261249c565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125e282611e56565b91506125ed83611e56565b9250828203905081811115612605576126046125a8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815461264781612180565b61265181866122d7565b9450600182166000811461266c5760018114612681576126b4565b60ff19831686528115158202860193506126b4565b61268a8561232a565b60005b838110156126ac5781548189015260018201915060208101905061268d565b838801955050505b50505092915050565b60006126c9828461263a565b915081905092915050565b6000815490506126e381612180565b9050919050565b8181036126f85750506127d0565b612701826126d4565b67ffffffffffffffff81111561271a576127196116a7565b5b6127248254612180565b61272f828285612449565b6000601f83116001811461275e576000841561274c578287015490505b61275685826124ba565b8655506127c9565b601f19841661276c8761232a565b96506127778661232a565b60005b8281101561279f5784890154825560018201915060018501945060208101905061277a565b868310156127bc57848901546127b8601f89168261249c565b8355505b6001600288020188555050505b5050505050505b565b7f506572736f6e20616c72656164792065786973743b3430300000000000000000600082015250565b6000612808601883611826565b9150612813826127d2565b602082019050919050565b60006020820190508181036000830152612837816127fb565b905091905056fea2646970667358221220234ca81731765de50b0ed20a2b94b041765e364f6293ce79758d3efa1e2d71b064736f6c634300081b0033";

type PassportConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PassportConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Passport__factory extends ContractFactory {
  constructor(...args: PassportConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Passport & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Passport__factory {
    return super.connect(runner) as Passport__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PassportInterface {
    return new Interface(_abi) as PassportInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Passport {
    return new Contract(address, _abi, runner) as unknown as Passport;
  }
}
